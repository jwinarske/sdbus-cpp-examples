<node>
    <interface name="org.freedesktop.Avahi.Server">
        <method name="GetVersionString">
            <arg name="version" type="s" direction="out"/>
        </method>
        <method name="GetAPIVersion">
            <arg name="version" type="u" direction="out"/>
        </method>
        <method name="GetHostName">
            <arg name="name" type="s" direction="out"/>
        </method>
        <method name="SetHostName">
            <arg name="name" type="s" direction="in"/>
        </method>
        <method name="GetHostNameFqdn">
            <arg name="name" type="s" direction="out"/>
        </method>
        <method name="GetDomainName">
            <arg name="name" type="s" direction="out"/>
        </method>
        <method name="IsNSSSupportAvailable">
            <arg name="yes" type="b" direction="out"/>
        </method>
        <method name="GetState">
            <arg name="state" type="i" direction="out"/>
        </method>
        <signal name="StateChanged">
            <arg name="state" type="i"/>
            <arg name="error" type="s"/>
        </signal>
        <method name="GetLocalServiceCookie">
            <arg name="cookie" type="u" direction="out"/>
        </method>
        <method name="GetAlternativeHostName">
            <arg name="name" type="s" direction="in"/>
            <arg name="name" type="s" direction="out"/>
        </method>
        <method name="GetAlternativeServiceName">
            <arg name="name" type="s" direction="in"/>
            <arg name="name" type="s" direction="out"/>
        </method>
        <method name="GetNetworkInterfaceNameByIndex">
            <arg name="index" type="i" direction="in"/>
            <arg name="name" type="s" direction="out"/>
        </method>
        <method name="GetNetworkInterfaceIndexByName">
            <arg name="name" type="s" direction="in"/>
            <arg name="index" type="i" direction="out"/>
        </method>
        <method name="ResolveHostName">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="name" type="s" direction="in"/>
            <arg name="aprotocol" type="i" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="interface" type="i" direction="out"/>
            <arg name="protocol" type="i" direction="out"/>
            <arg name="name" type="s" direction="out"/>
            <arg name="aprotocol" type="i" direction="out"/>
            <arg name="address" type="s" direction="out"/>
            <arg name="flags" type="u" direction="out"/>
        </method>
        <method name="ResolveAddress">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="address" type="s" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="interface" type="i" direction="out"/>
            <arg name="protocol" type="i" direction="out"/>
            <arg name="aprotocol" type="i" direction="out"/>
            <arg name="address" type="s" direction="out"/>
            <arg name="name" type="s" direction="out"/>
            <arg name="flags" type="u" direction="out"/>
        </method>
        <method name="ResolveService">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="name" type="s" direction="in"/>
            <arg name="type" type="s" direction="in"/>
            <arg name="domain" type="s" direction="in"/>
            <arg name="aprotocol" type="i" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="interface" type="i" direction="out"/>
            <arg name="protocol" type="i" direction="out"/>
            <arg name="name" type="s" direction="out"/>
            <arg name="type" type="s" direction="out"/>
            <arg name="domain" type="s" direction="out"/>
            <arg name="host" type="s" direction="out"/>
            <arg name="aprotocol" type="i" direction="out"/>
            <arg name="address" type="s" direction="out"/>
            <arg name="port" type="q" direction="out"/>
            <arg name="txt" type="aay" direction="out"/>
            <arg name="flags" type="u" direction="out"/>
        </method>
        <method name="EntryGroupNew">
            <arg name="path" type="o" direction="out"/>
        </method>
        <method name="DomainBrowserNew">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="domain" type="s" direction="in"/>
            <arg name="btype" type="i" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="path" type="o" direction="out"/>
        </method>
        <method name="ServiceTypeBrowserNew">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="domain" type="s" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="path" type="o" direction="out"/>
        </method>
        <method name="ServiceBrowserNew">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="type" type="s" direction="in"/>
            <arg name="domain" type="s" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="path" type="o" direction="out"/>
        </method>
        <method name="ServiceResolverNew">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="name" type="s" direction="in"/>
            <arg name="type" type="s" direction="in"/>
            <arg name="domain" type="s" direction="in"/>
            <arg name="aprotocol" type="i" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="path" type="o" direction="out"/>
        </method>
        <method name="HostNameResolverNew">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="name" type="s" direction="in"/>
            <arg name="aprotocol" type="i" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="path" type="o" direction="out"/>
        </method>
        <method name="AddressResolverNew">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="address" type="s" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="path" type="o" direction="out"/>
        </method>
        <method name="RecordBrowserNew">
            <arg name="interface" type="i" direction="in"/>
            <arg name="protocol" type="i" direction="in"/>
            <arg name="name" type="s" direction="in"/>
            <arg name="clazz" type="q" direction="in"/>
            <arg name="type" type="q" direction="in"/>
            <arg name="flags" type="u" direction="in"/>
            <arg name="path" type="o" direction="out"/>
        </method>
    </interface>
</node>